{"version":3,"file":"component---src-pages-confirm-jsx-7c88589ba8ddb8a71410.js","mappings":"yOAMaA,EAAU,SAACC,GACtB,OACE,QAACC,EAAD,MACE,oBACE,QAAC,KAAD,CAAMC,GAAIF,EAAMG,SAAU,eAAcH,EAAMI,aAC3CJ,EAAMK,YAGX,oBACE,QAAC,KAAD,CAAMH,GAAIF,EAAMM,SAAU,eAAcN,EAAMO,aAC3CP,EAAMQ,aAOXP,GAAK,6aA2BiBQ,EAAAA,EAAAA,KA3BjB,qBA4BiBA,EAAAA,EAAAA,KA5BjB,UA6BMA,EAAAA,EAAAA,KA7BN,8DAiCiBA,EAAAA,EAAAA,KAjCjB,qBAkCqBA,EAAAA,EAAAA,MAlCrB,0CAyCiBA,EAAAA,EAAAA,QAzCjB,qBA0CiBA,EAAAA,EAAAA,QA1CjB,UA2CMA,EAAAA,EAAAA,MA3CN,kEA+CqBA,EAAAA,EAAAA,MA/CrB,UAgDUA,EAAAA,EAAAA,QAhDV,8LAgEmBA,EAAAA,EAAAA,MAhEnB,UAiEQA,EAAAA,EAAAA,QAjER,SCVEC,EAAa,SAACV,GACzB,OACE,yBACE,QAAC,IAAD,OACA,QAAC,IAAD,OACA,qBACE,QAACW,EAAD,MACE,QAAC,IAAD,CACEC,OAAQZ,EAAMY,OACdC,OAAQb,EAAMa,OACdC,OAAQd,EAAMc,UAEhB,QAAC,IAAD,CACEC,WAAYf,EAAMe,WAClBC,WAAYhB,EAAMgB,WAClBC,WAAYjB,EAAMiB,WAClBC,WAAYlB,EAAMkB,WAClBC,WAAYnB,EAAMmB,aAEnBnB,EAAMoB,UACP,QAACrB,EAAD,CACEK,YAAaJ,EAAMI,YACnBG,YAAaP,EAAMO,YACnBJ,SAAUH,EAAMG,SAChBG,SAAUN,EAAMM,SAChBD,SAAUL,EAAMK,SAChBG,SAAUR,EAAMQ,cAItB,QAAC,IAAD,QAKAG,GAAQ,wIAKQF,EAAAA,EAAAA,MALR,gS,iGC3CDY,EAAW,SAACrB,GACvB,OACE,QAACC,EAAD,MACE,gBAAM,YAAWD,EAAMY,QAAvB,OACA,gBAAM,YAAWZ,EAAMa,QAAvB,OACA,gBAAM,YAAWb,EAAMc,QAAvB,QAKAb,GAAK,gKAQaQ,EAAAA,EAAAA,QARb,0EAYeA,EAAAA,EAAAA,QAZf,UAaIA,EAAAA,EAAAA,MAbJ,2CAgBeA,EAAAA,EAAAA,MAhBf,UAiBIA,EAAAA,EAAAA,QAjBJ,qJ,iGCVEa,EAAe,SAACtB,GAC3B,OACE,QAACC,EAAD,MACE,eAAK,gBAAeD,EAAMe,cAC1B,eAAK,gBAAef,EAAMgB,cAC1B,eAAK,gBAAehB,EAAMiB,cAC1B,eAAK,gBAAejB,EAAMkB,cAC1B,eAAK,gBAAelB,EAAMmB,eAK1BlB,GAAK,gdAgCiBQ,EAAAA,EAAAA,QAhCjB,qBAiCiBA,EAAAA,EAAAA,QAjCjB,+BAoCiBA,EAAAA,EAAAA,QApCjB,wIA4CiBA,EAAAA,EAAAA,MA5CjB,qBA6CiBA,EAAAA,EAAAA,KA7CjB,+BAgDiBA,EAAAA,EAAAA,KAhDjB,8D,kFCiDX,UA3DoB,WAClB,OACE,QAAC,IAAD,CACEG,OAAO,QACPC,OAAO,OACPC,OAAO,QACPC,WAAW,OACXC,WAAW,OACXC,WAAW,OACXC,WAAW,OACXd,YAAY,OACZG,YAAY,OACZJ,SAAS,UACTG,SAAS,WACTD,SAAS,UACTG,SAAS,YACTW,WAAW,SAEX,QAACI,EAAD,MACE,oBACE,4BAEE,mCAGJ,oBACE,4BAEE,8BAGJ,oBACE,gCAEE,uCAGJ,oBACE,gCAEE,6BACA,iCAGJ,oBACE,iCAEE,sCAEE,mBAFF,yEAcZ,IAAMA,GAAK,8OAaId,EAAAA,EAAAA,KAbJ","sources":["webpack://kiwi/./src/components/wrapper/btnWrap.jsx","webpack://kiwi/./src/components/layout/formLayout.jsx","webpack://kiwi/./src/components/wrapper/flowWrap.jsx","webpack://kiwi/./src/components/wrapper/progressWrap.jsx","webpack://kiwi/./src/pages/confirm.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n// utils\nimport { Colors } from \"../utils/colors\";\n\nexport const BtnWrap = (props) => {\n  return (\n    <SWrap>\n      <div>\n        <Link to={props.hrefBack} data-visible={props.visibleBack}>\n          {props.textBack}\n        </Link>\n      </div>\n      <div>\n        <Link to={props.hrefNext} data-visible={props.visibleNext}>\n          {props.textNext}\n        </Link>\n      </div>\n    </SWrap>\n  );\n};\n\nconst SWrap = styled.div`\n  margin-top: 2rem auto;\n  height: 3rem;\n  display: flex;\n  justify-content: center;\n  div {\n    a {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n      font-size: 0.9rem;\n      font-weight: 500;\n      text-decoration: none;\n      padding: 1rem 2rem;\n      min-width: 320px;\n      border-radius: 8px;\n      margin: 0 1rem;\n      transition: 0.2s;\n      &[data-visible=\"true\"] {\n      }\n      &[data-visible=\"false\"] {\n        pointer-events: none;\n      }\n    }\n    &:first-of-type {\n      a {\n        border: 1px solid ${Colors.gray};\n        background-color: ${Colors.gray};\n        color: ${Colors.dark};\n\n        @media screen and (min-width: 600px) {\n          &:hover {\n            border-color: ${Colors.dark};\n            background-color: ${Colors.light};\n          }\n        }\n      }\n    }\n    &:last-of-type {\n      a {\n        border: 1px solid ${Colors.primary};\n        background-color: ${Colors.primary};\n        color: ${Colors.light};\n\n        @media screen and (min-width: 600px) {\n          &:hover {\n            background-color: ${Colors.light};\n            color: ${Colors.primary};\n          }\n        }\n      }\n    }\n  }\n  @media screen and (max-width: 599px) {\n    display: flex;\n    flex-direction: column-reverse;\n    justify-content: space-between;\n    div {\n      a {\n        margin: 0rem;\n        width: 100%;\n        margin-top: 1rem;\n        &:active {\n          background-color: ${Colors.light};\n          color: ${Colors.primary};\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport \"../../styles/global.css\";\nimport styled from \"@emotion/styled\";\n// components\nimport { Seo } from \"../seo/seo\";\nimport { Header } from \"../header/header\";\nimport { Footer } from \"../footer/footer\";\nimport { ProgressWrap } from \"../wrapper/progressWrap\";\nimport { FlowWrap } from \"../wrapper/flowWrap\";\nimport { BtnWrap } from \"../wrapper/btnWrap\";\n// utils\nimport { Colors } from \"../utils/colors\";\n\nexport const FormLayout = (props) => {\n  return (\n    <>\n      <Seo />\n      <Header />\n      <main>\n        <SSection>\n          <FlowWrap\n            flow01={props.flow01}\n            flow02={props.flow02}\n            flow03={props.flow03}\n          />\n          <ProgressWrap\n            progress01={props.progress01}\n            progress02={props.progress02}\n            progress03={props.progress03}\n            progress04={props.progress04}\n            progress05={props.progress05}\n          />\n          {props.children}\n          <BtnWrap\n            visibleBack={props.visibleBack}\n            visibleNext={props.visibleNext}\n            hrefBack={props.hrefBack}\n            hrefNext={props.hrefNext}\n            textBack={props.textBack}\n            textNext={props.textNext}\n          />\n        </SSection>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nconst SSection = styled.section`\n  width: calc(100% - 4rem);\n  min-height: calc(100% - 2rem);\n  margin: auto;\n  padding: 2rem;\n  background-color: ${Colors.light};\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  .formwrap {\n    min-height: calc(100% - 64px - 64px - 3rem);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: auto;\n  }\n\n  @media screen and (max-width: 599px) {\n    width: calc(100% - 1rem);\n    padding: 1rem;\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n// utils\nimport { Colors } from \"../utils/colors\";\n\nexport const FlowWrap = (props) => {\n  return (\n    <SWrap>\n      <span data-flow={props.flow01}>入力</span>\n      <span data-flow={props.flow02}>確認</span>\n      <span data-flow={props.flow03}>完了</span>\n    </SWrap>\n  );\n};\n\nconst SWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  span {\n    padding: 0.5rem 2rem;\n    line-height: 1;\n    border: 1px solid ${Colors.primary};\n    font-size: 0.9rem;\n    font-weight: 500;\n    &[data-flow=\"true\"] {\n      background-color: ${Colors.primary};\n      color: ${Colors.light};\n    }\n    &[data-flow=\"false\"] {\n      background-color: ${Colors.light};\n      color: ${Colors.primary};\n    }\n    &:nth-of-type(1) {\n      border-radius: 8px 0 0 8px;\n    }\n    &:nth-of-type(2) {\n      border-right: none;\n      border-left: none;\n    }\n    &:nth-of-type(3) {\n      border-radius: 0 8px 8px 0;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n// utils\nimport { Colors } from \"../utils/colors\";\n\nexport const ProgressWrap = (props) => {\n  return (\n    <SWrap>\n      <div data-progress={props.progress01}></div>\n      <div data-progress={props.progress02}></div>\n      <div data-progress={props.progress03}></div>\n      <div data-progress={props.progress04}></div>\n      <div data-progress={props.progress05}></div>\n    </SWrap>\n  );\n};\n\nconst SWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 64px;\n  div {\n    display: inline-flex;\n    align-items: center;\n    &::before {\n      content: \"\";\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      width: 0.7rem;\n      height: 0.7rem;\n      border-radius: 100vh;\n      font-size: 0.9rem;\n      font-weight: 500;\n    }\n    &::after {\n      content: \"\";\n      display: inline-flex;\n      width: 4rem;\n      height: 2px;\n    }\n    &:last-of-type {\n      &::after {\n        display: none;\n      }\n    }\n    &[data-progress=\"true\"] {\n      &::before {\n        background-color: ${Colors.primary};\n        border: 2px solid ${Colors.primary};\n      }\n      &::after {\n        background-color: ${Colors.primary};\n        animation-name: pageMove;\n        animation-fill-mode: backwards;\n        animation-duration: 0.3s;\n      }\n    }\n    &[data-progress=\"false\"] {\n      &::before {\n        background-color: ${Colors.light};\n        border: 2px solid ${Colors.gray};\n      }\n      &::after {\n        background-color: ${Colors.gray};\n      }\n    }\n  }\n\n  @keyframes pageMove {\n    0% {\n      opacity: 0.5;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n// components\nimport { FormLayout } from \"../components/layout/formLayout\";\n// utils\nimport { Colors } from \"../components/utils/colors\";\n\nconst ConfirmPage = () => {\n  return (\n    <FormLayout\n      flow01=\"false\"\n      flow02=\"true\"\n      flow03=\"false\"\n      progress01=\"true\"\n      progress02=\"true\"\n      progress03=\"true\"\n      progress04=\"true\"\n      visibleBack=\"true\"\n      visibleNext=\"true\"\n      hrefBack=\"/form05\"\n      hrefNext=\"/thanks/\"\n      textBack=\"前の質問に戻る\"\n      textNext=\"この内容で送信する\"\n      progress05=\"true\"\n    >\n      <SForm>\n        <div>\n          <span>\n            ■会社名\n            <p>デマンドリンク株式会社</p>\n          </span>\n        </div>\n        <div>\n          <span>\n            ■お名前\n            <p>デマンド太郎</p>\n          </span>\n        </div>\n        <div>\n          <span>\n            ■メールアドレス\n            <p>sample@xxxx.com</p>\n          </span>\n        </div>\n        <div>\n          <span>\n            ■関心のある商品\n            <p>ゴルフ関連製品</p>\n            <p>付属ソフト関連製品</p>\n          </span>\n        </div>\n        <div>\n          <span>\n            ■お問い合わせ内容\n            <p>\n              XXX製品の無料デモのご相談です。\n              <br />\n              サンプルテキストサンプルテキストサンプルテキストサンプルテキストサンプルテキストサンプルテキストサンプルテキストサンプルテキスト\n            </p>\n          </span>\n        </div>\n      </SForm>\n    </FormLayout>\n  );\n};\n\nexport default ConfirmPage;\n\nconst SForm = styled.div`\n  min-height: calc(100% - 64px - 64px - 3rem);\n  width: 800px;\n  margin: auto;\n  margin-top: 2rem;\n  margin-bottom: 3rem;\n  div {\n    margin-top: 3rem;\n    span {\n      display: flex;\n      flex-direction: column;\n      font-size: 0.9rem;\n      font-weight: 500;\n      color: ${Colors.dark};\n      line-height: 1;\n      p {\n        opacity: 0.8;\n        margin-top: 1.5rem;\n        width: 100%;\n        border: none;\n        font-size: 0.9rem;\n        line-height: 1;\n        transition: border 0.2s;\n      }\n    }\n  }\n  /* TB */\n  @media screen and (max-width: 1023px) {\n    width: 100%;\n    height: auto;\n    margin-bottom: 7rem;\n  }\n`;\n"],"names":["BtnWrap","props","SWrap","to","hrefBack","visibleBack","textBack","hrefNext","visibleNext","textNext","Colors","FormLayout","SSection","flow01","flow02","flow03","progress01","progress02","progress03","progress04","progress05","children","FlowWrap","ProgressWrap","SForm"],"sourceRoot":""}